[Global Java]
# Java 7 Path
# Find out by running `which java`
JavaPath: /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/bin/java

# You should not have to change that, be careful
EncodingOption: -Dfile.encoding=UTF-8

[InstrumentationPEP]
# The directory where you have the InstrumentationPEP
InstrumentationPepDirectory: /Users/laurentmeyer/Documents/Uni/3.Semester/DroidForce/Instrumentation-PEP/
;NeededFromPEP = ["bin", "libs/android.jar", "libs/axml-2.0.jar", "libs/slf4j-api-1.7.5.jar",
;                 "libs/slf4j-simple-1.7.5.jar"]
[Soot]
SootDirectory: /Users/laurentmeyer/Documents/Uni/3.Semester/soot/
;NeededFromSoot = ["testclasses", "classes", "libs/polyglot.jar", "libs/AXMLPrinter2.jar", "libs/hamcrest-all-1.3.jar",
;                  "libs/junit-4.11.jar", "libs/asm-debug-all-5.0.3.jar", "libs/cglib-nodep-2.2.2.jar",
;                  "libs/java_cup.jar", "libs/javassist-3.18.2-GA.jar", "libs/mockito-all-1.10.8.jar",
;                  "libs/powermock-mockito-1.6.1-full.jar", "libs/jboss-common-core-2.5.0.Final.jar",
;                  "libs/dexlib2-2.1.0-dev.jar", "libs/util-2.1.0-dev.jar"]
[Jasmin]
JasminDirectory: /Users/laurentmeyer/Documents/Uni/3.Semester/jasmin/
;NeededFromJasmin = ["classes", "libs/java_cup.jar"]
[Heros]
HerosDirectory: /Users/laurentmeyer/Documents/Uni/3.Semester/heros/
;NeededFromHeros = ["target/classes", "target/test-classes", "slf4j-api-1.7.5.jar", "slf4j-simple-1.7.5.jar",
;                   "junit.jar", "org.hamcrest.core_1.3.0.jar", "mockito-all-1.9.5.jar", "guava-18.0.jar"]
[FunctionalJava]
PathToFunctional: /Users/laurentmeyer/.m2/repository/org/functionaljava/functionaljava/4.2/functionaljava-4.2.jar
[Infoflow]
PathSootInfoflow: /Users/laurentmeyer/Documents/Uni/3.Semester/soot-infoflow/
;NeededFromSootInfoflow = ["bin", "lib/cos.jar", "lib/j2ee.jar", "lib/slf4j-api-1.7.5.jar", "lib/slf4j-simple-1.7.5.jar"]
[Infoflow Android]
PathSootInfoflowAndroid: /Users/laurentmeyer/Documents/Uni/3.Semester/soot-infoflow-android/
;NeededFromSootInfoflowAndroid = ["bin", "lib/AXMLPrinter2.jar", "lib/axml-2.0.jar"]

;MainMethodName = "de.ecspride.Main"

;AndroidPlatformsCommand = "-androidPlatforms"

[Android]
# Android Platform Path
PlatformsPath: ~/ASDK/platforms

;sourceFileCommand = "-sourceFile"
[Sources and Sinks]
# Path to the file containing all the sources (default sources, can be overidden by http call)
sourceFilePath: ./files/catSources_Short.txt

;sinkFileCommand = "-sinkFile"
# Path to the file containing all the sinks (default sinks, can be overidden by http call)
sinkFilePath: ./files/catSinks_Short.txt

;taintWrapperCommand = "-taintWrapper"
# Path to the file containing the TaintWrapper (default, can be overiden by http call)
taintWrapperPath: ./files/EasyTaintWrapperSource.txt

;apkFileCommand = "-apkFile"
[To be instrumented]
# Path to the apk to be instrumented (default, can be overiden by http call)
apkFilePath: /Users/laurentmeyer/NetworkOutput/app-debug.apk
;apkName = path_leaf(apkFilePath)

;outputDirectoryCommand = "-o"
[Output]
# Path to output directory
outputDirectoryPath: ./sootOutput/

;androidJarCommand = "-androidJar"
[Android Jar]
# Path to android Jar
androidJarPath: ./libs/android.jar

# Check if jarsigner is present
;jarsigner = "jarsigner"
;keystoreOption = "-keystore"
[Keystore]
# Where is the keystore located
keyStorePath: ~/keystore
;storePassOption = "-storepass"
# What is the alias of the keystore
alias: mykeystore
# What is the pass of the keystore
storePass: laurent
;signedJarOption = "-signedJar"
;outputDirectoryAndFileName = outputDirectoryPath+"apk-instrumented-signed.apk"